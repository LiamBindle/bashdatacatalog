#!/usr/bin/env bash
if [ ! -z ${DEBUG+x} ]; then
    set -x
fi
set -u
set -e

# Parse the command

COMMAND=$1
shift

THIS_SCRIPTS_DIRECTORY=$(realpath $(dirname "$0"))
FILTER_TEMPORAL_ASSETS_EXE=$THIS_SCRIPTS_DIRECTORY/utils/datacat-filter-temporal-assets

case "$COMMAND" in
"list-assets")
    EXE_SCRIPT=$THIS_SCRIPTS_DIRECTORY/utils/datacat-list-assets
    ;;
"list-temporalassets")
    EXE_SCRIPT=$THIS_SCRIPTS_DIRECTORY/utils/datacat-list-temporal-assets
    ;;
"list-untracked")
    EXE_SCRIPT=$THIS_SCRIPTS_DIRECTORY/utils/datacat-list-untracked
    ;;
"list-missing")
    EXE_SCRIPT=$THIS_SCRIPTS_DIRECTORY/utils/datacat-list-missing
    ;;
"list-invalid")
    EXE_SCRIPT=$THIS_SCRIPTS_DIRECTORY/utils/datacat-list-invalid
    ;;
"fetch")
    EXE_SCRIPT=$THIS_SCRIPTS_DIRECTORY/utils/datacat-fetch-collection
    ;;
"admin-autoindex")
    EXE_SCRIPT=$THIS_SCRIPTS_DIRECTORY/utils/datacat-auto-index
    ;;
"admin-edittemporal")
    EXE_SCRIPT=$THIS_SCRIPTS_DIRECTORY/utils/datacat-edit-temporal
    ;;
"admin-cleanindex")
    EXE_SCRIPT=$THIS_SCRIPTS_DIRECTORY/utils/datacat-clean-index
    ;;
"list"*)
    echo "Invalid list command '$COMMAND'. See usage (--help) for the list commands."
    exit 1
    ;;
"self-test")
    # Special case: run immediately and exit
    $THIS_SCRIPTS_DIRECTORY/utils/datacat-self-test
    exit 0
    ;;
"self-update")
    # Special case: run immediately and exit
    cd $THIS_SCRIPTS_DIRECTORY
    git pull
    ;;
*)
    echo "Unknown command '$COMMAND'"
    exit 1
    ;;
esac

# List commands have an optional FMT={relative, absolute, url, rsync, globus}, FROM=<date>, TO=<date> arguments
LIST_FMT="relative"
FILTER_FROM=""
FILTER_TO=""
case "$COMMAND" in 
"list-"*)
    while [ $# -gt 0 ]; do
        case "$1" in 
        "FMT=relative")
            LIST_FMT="relative"
            shift
            ;;
        "FMT=rsync")
            LIST_FMT="relative"
            shift
            ;;
        "FMT=absolute")
            LIST_FMT="absolute"
            shift
            ;;
        "FMT=http")
            LIST_FMT="http"
            shift
            ;;
        "FMT=globus")
            LIST_FMT="globus"
            read -e -p "> Source endpoint root directory: " GLOBUS_SRC_ROOT
            read -e -p "> Destination endpoint root directory: " GLOBUS_DST_ROOT
            shift
            ;;
        "FMT="*)
            echo "Unknown list format $1"
            exit 1
            ;;
        "FROM="*)
            FILTER_FROM=$(echo "$1" | sed 's/FROM=//g')
            shift
            ;;
        "TO="*)
            FILTER_TO=$(echo "$1" | sed 's/TO=//g')
            shift
            ;;
        *)
            break
            ;;
        esac

    done
esac
    
# The remaining arguments are catalogs or paths to collections

COMBINED_CATALOG=$(mktemp)
TEMP_FILE=$(mktemp)

# Create a combined catalog from all the arguments
while [ $# -gt 0 ]; do
    if [ -d $1 ]; then
        # if it's a directory, assume the directory is a collection
        COLLECTION_DIR=$(echo "$1" | sed 's#/*$##g')  # strip trailing slashes
        echo "$COLLECTION_DIR,local,1," >> $COMBINED_CATALOG
    else
        tail -n +2 $1 >> $COMBINED_CATALOG
    fi  
    sort $COMBINED_CATALOG | uniq > $TEMP_FILE
    cp $TEMP_FILE $COMBINED_CATALOG
    shift
done

# Drop collections that aren't enabled
awk -F',' '{ if($3 != 0){print $0} }' $COMBINED_CATALOG > $TEMP_FILE
cp $TEMP_FILE $COMBINED_CATALOG

# Run command in each collection
WORKING_DIR=$(pwd)
while read COLLECTION_LINE; do
    COLLECTION_PATH=$(echo "$COLLECTION_LINE" | awk -F',' '{print $1}')
    COLLECTION_PATH=$(echo "$COLLECTION_PATH" | sed 's#/*$##g')  # strip trailing slashes
    COLLECTION_URL=$(echo "$COLLECTION_LINE" | awk -F',' '{print $2}')
    COLLECTION_URL=$(echo "$COLLECTION_URL" | sed 's#/*$##g')  # strip trailing slashes
    cd $COLLECTION_PATH
    case $COMMAND in
    "fetch")
        $EXE_SCRIPT $COLLECTION_URL
        ;;
    "list-"*)
        if [ "$LIST_FMT" = "relative" ]; then
            $EXE_SCRIPT | $FILTER_TEMPORAL_ASSETS_EXE $FILTER_FROM $FILTER_TO | sed "s#^\./#./$COLLECTION_PATH/#g"
        elif [ "$LIST_FMT" = "absolute" ]; then
            $EXE_SCRIPT | $FILTER_TEMPORAL_ASSETS_EXE $FILTER_FROM $FILTER_TO | sed "s#^\./#$WORKING_DIR/$COLLECTION_PATH/#g"
        elif [ "$LIST_FMT" = "http" ]; then
            $EXE_SCRIPT | $FILTER_TEMPORAL_ASSETS_EXE $FILTER_FROM $FILTER_TO | sed "s#^\./#$COLLECTION_URL/#g"
        elif [ "$LIST_FMT" = "globus" ]; then
            $EXE_SCRIPT | $FILTER_TEMPORAL_ASSETS_EXE $FILTER_FROM $FILTER_TO | sed "s#^\./\(.*\)#$GLOBUS_SRC_ROOT/$COLLECTION_PATH/\1  $GLOBUS_DST_ROOT/$COLLECTION_PATH/\1/#g" > $TEMP_FILE
            column -t $TEMP_FILE
        else
            echo "Unknown list format ($LIST_FMT)"
            exit 1
        fi
        ;;
    *)
        $EXE_SCRIPT
        ;;
    esac
    cd $WORKING_DIR
done < $COMBINED_CATALOG


rm $COMBINED_CATALOG $TEMP_FILE