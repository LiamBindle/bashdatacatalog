#!/usr/bin/env bash
set -u

BDC_LIST_STATIC=${BDC_LIST_STATIC:=false}
BDC_LIST_TEMPORAL=${BDC_LIST_TEMPORAL:=false}
BDC_LIST_NEW=${BDC_LIST_NEW:=false}
BDC_LIST_KEEP=${BDC_LIST_KEEP:=""}
BDC_LIST_PATTERN=${BDC_LIST_PATTERN:=".*"}
BDC_LIST_RANGE=${BDC_LIST_RANGE:=","}
BDC_LIST_FORMAT=${BDC_LIST_FORMAT:="rel"}
BDC_COLLECTION_PREFIX=${BDC_COLLECTION_PREFIX:=""}

# Set up
WORK_LIST=$(mktemp)
TEMP_FILE=$(mktemp)

ASSETS=$(mktemp)
TEMPORAL_ASSETS=$(mktemp)
STATIC_ASSETS=$(mktemp)

[ -f .assets.md5 ] && awk -F ' +' '{print $2}' .assets.md5 | sed 's/^\*//g' > ${ASSETS}
[ -f .temporal_assets.sed ] && sed -n -f .temporal_assets.sed ${ASSETS} | awk -F ' +' '{print $2}' > ${TEMPORAL_ASSETS}
comm -23 $ASSETS $TEMPORAL_ASSETS > ${STATIC_ASSETS}

# Stage 1: Generate work list
if [ "${BDC_LIST_STATIC}" = true ]; then
    cat $STATIC_ASSETS >> ${WORK_LIST}
fi

if [ "${BDC_LIST_TEMPORAL}" = true ]; then
    cat $TEMPORAL_ASSETS >> ${WORK_LIST}
fi

if [ "${BDC_LIST_NEW}" = true ]; then
    find -L . -name .asset_patches -prune -o -type f \( ! -name '\.*' \) -print | sort > ${TEMP_FILE}
    comm -23 ${TEMP_FILE} ${ASSETS} >> ${WORK_LIST}
fi

# Sort WORK_LIST
sort -o ${WORK_LIST} ${WORK_LIST}

# Stage 2: Trim work list
if [ -f .ignore.grep ]; then
    grep -v -f .ignore.grep ${WORK_LIST} > ${TEMP_FILE}
    cp ${TEMP_FILE} ${WORK_LIST}
fi

grep "${BDC_LIST_PATTERN}" ${WORK_LIST} > ${TEMP_FILE}
cp ${TEMP_FILE} ${WORK_LIST}


if [ -f .temporal_assets.sed ]; then
    TRIM_LIST=$(mktemp)

    AWK_CMP_LT='''
    { if(length($1) > length(threshold)) { cmplen=length(threshold) } else { cmplen=length($1) }; if(substr($1,0,cmplen) < substr(threshold,0,cmplen)) print $2 }
    '''
    AWK_CMP_GT='''
    { if(length($1) > length(threshold)) { cmplen=length(threshold) } else { cmplen=length($1) }; if(substr($1,0,cmplen) > substr(threshold,0,cmplen)) print $2 }
    '''

    RANGE_START=$(echo ${BDC_LIST_RANGE} | cut -d, -f1)
    RANGE_END=$(echo ${BDC_LIST_RANGE} | cut -d, -f2)
    
    sed -n -f .temporal_assets.sed ${WORK_LIST} > ${TEMP_FILE}
    if [ ! -z "${RANGE_START}" ]; then
        awk -F ' +' -v threshold=${RANGE_START} "$AWK_CMP_LT" ${TEMP_FILE} >> ${TRIM_LIST}
    fi
    if [ ! -z "${RANGE_END}" ]; then
        awk -F ' +' -v threshold=${RANGE_END} "$AWK_CMP_GT" ${TEMP_FILE} >> ${TRIM_LIST}
    fi
    
    grep -v -F -f ${TRIM_LIST} ${WORK_LIST} > ${TEMP_FILE}
    cp ${TEMP_FILE} ${WORK_LIST}
    rm ${TRIM_LIST}
fi

# Stage 3: Trim work list
FILE_LIST=$(mktemp)
find -L . -name .asset_patches -prune -o -type f \( ! -name '\.*' \) -print | sort > ${FILE_LIST}

case "${BDC_LIST_KEEP}" in
    missing)
        comm -23 ${WORK_LIST} ${FILE_LIST} > ${TEMP_FILE}
        cp ${TEMP_FILE} ${WORK_LIST}
        ;;
    wrong)
        printf "" > ${TEMP_FILE}
        while read FILE_PATH; do
            grep -F "${FILE_PATH}" .assets.md5 | md5sum -c --status || echo "${FILE_PATH}" >> ${TEMP_FILE}
        done < ${WORK_LIST}
        cp ${TEMP_FILE} ${WORK_LIST}
        ;;
    unnecessary)
        comm -13 ${WORK_LIST} ${FILE_LIST} > ${TEMP_FILE}
        cp ${TEMP_FILE} ${WORK_LIST}
        ;;
esac
rm ${FILE_LIST}

# Stage 4: Action/format
printf "" > ${TEMP_FILE}
NEW_COL=$(mktemp)
OUTPUT_LIST=$(mktemp)
for format in ${BDC_LIST_FORMAT//,/ }; do
    case "${format}" in
        "rel")
            sed "s#^\./#./$BDC_COLLECTION_PREFIX#g" ${WORK_LIST} > ${NEW_COL}
            ;;
        "abs")
            sed "s#^\./#$PWD/#g" ${WORK_LIST} > ${NEW_COL}
            ;;
        "url")
            sed "s#^\./#$BDC_COLLECTION_URL#g" ${WORK_LIST} > ${NEW_COL}
            ;;
        "rsync")
            sed "s#^\./#./$BDC_COLLECTION_PREFIX#g" ${WORK_LIST} > ${NEW_COL}
            ;;
        "globus="*":"*)
            GLOBUS_SRC=$(echo "${format}" | sed 's#globus=\([^:]*\):\(.*\)#\1#g')
            GLOBUS_DST=$(echo "${format}" | sed 's#globus=\([^:]*\):\(.*\)#\2#g')
            sed "s#^\./\(.*\)#$GLOBUS_SRC/$BDC_COLLECTION_PREFIX\1  $GLOBUS_DST/$BDC_COLLECTION_PREFIX\1#g" ${WORK_LIST} > ${NEW_COL}
            ;;
    esac
    if [ "$(cat ${OUTPUT_LIST} | wc -l)" -gt "0" ]; then
        paste -d',' ${OUTPUT_LIST} ${NEW_COL} > ${TEMP_FILE}
        cp ${TEMP_FILE} ${OUTPUT_LIST}
    else
        cp ${NEW_COL} ${OUTPUT_LIST}
    fi
done
cat ${TEMP_FILE}

# Tear down
rm ${WORK_LIST} ${TEMP_FILE} ${ASSETS} ${TEMPORAL_ASSETS} ${STATIC_ASSETS} ${NEW_COL} ${OUTPUT_LIST}
