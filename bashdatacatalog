#!/usr/bin/env bash
set -e

USAGE="""Executes a command on every collection in one or more catalogs.

Usage:

    bashdatacatalog [ catalog.. | collection ] COMMAND ARGS..

    catalog..:  Paths to catalogs. The collection command (COMMAND)
                is execute on every collection in the combined catalogs.
                Catalogs are joined, so the COMMAND is only executed once 
                per collection.

                See below for COMMAND (and ARGS..) documentation.

    collection: The collection to execute COMMAND on.

Listing commands (COMMAND ARGS..):

  list-assets  [format] [start] [end]       Lists files
  list-missing [format] [start] [end]       Lists missing files
  list-invalid [format] [start] [end]       Lists invalid files
  list-untracked                            Lists untracked files

  ARGS..:
    
    format:     The output list format. Valid options are 
                  relative
                  absolute
                  url=https://example.com  (base url provided by catalog)
                  rsync
                  globus=/src,/dst

Update commands (COMMAND ARGS..):

    fetch                                   Updates collection metadata from
                                            remote collections.

Meta commands (COMMAND ARGS..):

    self-test                               Runs bashdatacatalog self test
    self-update                             Updates bashdatacatalog
"""
if [[ ( $* == --help ) ||  ( $* == -h ) || $# -lt 1 ]]; then 
    echo "$USAGE"
    exit 1
fi 

if [ ! -z ${DEBUG+x} ]; then
    set -x
fi

## Parse catalogs
COMBINED_CATALOG=$(mktemp)
TEMP_FILE=$(mktemp)

# Create a combined catalog from all the arguments
if [ -f $1/.assets.md5 ]; then
    # if it's a directory, assume the directory is a collection
    COLLECTION_DIR=$(echo "$1" | sed 's#/*$##g')  # strip trailing slashes
    echo "$COLLECTION_DIR,local,1," >> $COMBINED_CATALOG
    shift
else
    while [ -f $1 ]; do
        tail -n +2 $1 >> $COMBINED_CATALOG
        sort $COMBINED_CATALOG | uniq > $TEMP_FILE
        cp $TEMP_FILE $COMBINED_CATALOG
        shift
    done

    # Drop collections that aren't enabled
    awk -F',' '{ if($3 != 0){print $0} }' $COMBINED_CATALOG > $TEMP_FILE
    cp $TEMP_FILE $COMBINED_CATALOG
fi


## Parse the command

COMMAND=$1
shift

THIS_SCRIPTS_DIRECTORY=$(realpath $(dirname "$0"))
FILTERFORMATLIST=$THIS_SCRIPTS_DIRECTORY/utils/bashdatacatalog-filterformatlist

case "$COMMAND" in
"list-assets")
    BDC_SCRIPT=$THIS_SCRIPTS_DIRECTORY/utils/bashdatacatalog-listassets
    ;;
"list-untracked")
    BDC_SCRIPT=$THIS_SCRIPTS_DIRECTORY/utils/bashdatacatalog-listuntracked
    ;;
"list-missing")
    BDC_SCRIPT=$THIS_SCRIPTS_DIRECTORY/utils/bashdatacatalog-listmissing
    ;;
"list-invalid")
    BDC_SCRIPT=$THIS_SCRIPTS_DIRECTORY/utils/bashdatacatalog-listinvalid
    ;;
"fetch")
    BDC_SCRIPT=$THIS_SCRIPTS_DIRECTORY/utils/bashdatacatalog-fetch
    ;;
"admin-autoindex")
    BDC_SCRIPT=$THIS_SCRIPTS_DIRECTORY/utils/bashdatacatalog-autoindex
    ;;
"admin-cleanindex")
    BDC_SCRIPT=$THIS_SCRIPTS_DIRECTORY/utils/bashdatacatalog-cleanindex
    ;;
"self-test")
    # Special case: run immediately and exit
    $THIS_SCRIPTS_DIRECTORY/utils/bashdatacatalog-selftest
    exit 0
    ;;
"self-update")
    # Special case: run immediately and exit
    cd $THIS_SCRIPTS_DIRECTORY
    git pull
    exit 0
    ;;
*)
    echo "Unknown command '$COMMAND'. See usage (--help)."
    exit 1
    ;;
esac

# Run command in each collection
WORKING_DIR=$(pwd)
while read COLLECTION_LINE; do
    COLLECTION_PATH=$(echo "$COLLECTION_LINE" | awk -F',' '{print $1}')
    COLLECTION_PATH=$(echo "$COLLECTION_PATH" | sed 's#/*$##g')  # strip trailing slashes
    COLLECTION_URL=$(echo "$COLLECTION_LINE" | awk -F',' '{print $2}')
    COLLECTION_URL=$(echo "$COLLECTION_URL" | sed 's#/*$##g')  # strip trailing slashes
    mkdir -p $COLLECTION_PATH
    cd $COLLECTION_PATH
    case $COMMAND in
    "fetch")
        $BDC_SCRIPT $COLLECTION_URL
        ;;
    "list-"*)
        if [ $# -eq 0 ]; then
            $BDC_SCRIPT | BDC_COLLECTION_PREFIX=$COLLECTION_PATH/ $FILTERFORMATLIST relative
        elif [ "$1" = "url" ]; then
            $BDC_SCRIPT | BDC_COLLECTION_PREFIX=$COLLECTION_PATH/ $FILTERFORMATLIST url=$COLLECTION_URL $2 $3
        else
            $BDC_SCRIPT | BDC_COLLECTION_PREFIX=$COLLECTION_PATH/ $FILTERFORMATLIST $1 $2 $3
        fi
        ;;
    *)
        $BDC_SCRIPT
        ;;
    esac
    cd $WORKING_DIR
done < $COMBINED_CATALOG

rm $COMBINED_CATALOG $TEMP_FILE
