#!/usr/bin/env bash
if [ ! -z ${DEBUG+x} ]; then
    set -x
fi

USAGE="""Automatically (re)indexes all the files in the current directory as collection
assets. This command is intended for data collection providers.  

Usage:

  bashdatacatalog-autoindex [reindex_threshold]

    reindex_threshold:      The threshold for reindexing. Temporal assets that
                            that compare GREATER THAN the reindex_threshold 
                            will not be reindexed.

                            Files that aren't present in the collection are 
                            indexed regardless of reindex_threshold.

  bashdatacatalog-autoindex {-h | --help}

    Prints this help message.

Examples:

  bashdatacatalog-autoindex             -- (Re)indexes all files in the CWD.

  bashdatacatalog-autoindex 2019-10     -- Reindexes temporal assets greater 
                                           than \"2019-10\", and indexes any
                                           files that aren't present in the
                                           collection.
"""

if [[ ( $* == --help ) ||  ( $* == -h ) ]]; then 
   echo "$USAGE"
   exit 1
fi 

# Make the file list for the cwd
FILE_LIST=$(mktemp)
find -L . -name .asset_patches -prune -o -type f \( ! -name '\.*' \) -print | sort > $FILE_LIST

# Make temporary files
STAGED_ASSETS=$(mktemp)     # "staged" copy of the new .assets.md5
PROCESS_LIST=$(mktemp)      # file to index (calculate MD5 sums for)

# Make the PROCESS_LIST
if [ $# -gt 0 ]; then
    IGNORE_THRESHOLD=$1

    # Generate ignore-list for temporal assets older than the ignore threshold
    IGNORE_LIST=$(mktemp)
    cat $FILE_LIST | sed -n -f .temporal_assets.sed | awk -F' +' -v ignore_lt="$IGNORE_THRESHOLD" '{if (ignore_lt >= $1){print $2}}' > $IGNORE_LIST

    # Carry-over ignored entries from previous .assets.md5
    grep -s -F -f $IGNORE_LIST .assets.md5 > $STAGED_ASSETS

    # Generate the list of files to process (calculate MD5 sums for)
    cat $FILE_LIST | grep -v -F -f $IGNORE_LIST > $PROCESS_LIST

    rm -f $IGNORE_LIST
else
    # Generate the list of files to process (calculate MD5 sums for)
    cat $FILE_LIST > $PROCESS_LIST
fi


# Generate the "staged" copy of .assets.md5
cat $PROCESS_LIST | xargs md5sum -b >> $STAGED_ASSETS
sort -k2 -o $STAGED_ASSETS $STAGED_ASSETS

# Calculate diff to .assets.md5
DIFF_FILE=$(mktemp)
diff -Nu .assets.md5 $STAGED_ASSETS > $DIFF_FILE
if [ $? -ne 0 ] ; then
	mkdir -p .asset_patches
	cp $DIFF_FILE .asset_patches/$(date -u +"%FT%H%MZ").patch
fi

# "Commit" .assets.md5
mv $STAGED_ASSETS .assets.md5

# Clean up temporary files
rm -f $FILE_LIST $STAGED_ASSETS $PROCESS_LIST $DIFF_FILE