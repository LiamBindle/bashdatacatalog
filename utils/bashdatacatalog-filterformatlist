#!/usr/bin/env bash
USAGE="""Filters a file list (from STDIN) according to a START and END dates and 
reformats the outgoing list according to the use.   

Usage:

  ... | bashdatacatalog-filterformatlist FORMAT [START] [END] 

    FORMAT:     The outgoing list format. Valid values are

                    relative                    Relative file list

                    absolute                    Absolute file list

                    url=https://example.com     URL list

                    rsync                       rsync '--files-from' list

                    globus=/src,/dst            Globus transfer list where 
                                                /src and /dst are the source 
                                                and destination endpoint's 
                                                root directories.

    START:      Only include temporal assets greater than or equal to START.

    END:        Only include temporal assets less than or equal to END.

  bashdatacatalog-filterformatlist {-h | --help}
  
    Prints this help message.

Environment variables:

    BDC_COLLECTION_PREFIX       If defined, relative paths will include this 
                                prefix.
"""

if [[ ( $* == --help ) ||  ( $* == -h ) || $# -lt 1 ]]; then 
   echo "$USAGE"
   exit 1
fi 

if [ ! -z ${DEBUG+x} ]; then
    set -x
fi

## Parse format spec
case $1 in
"relative")
    FORMAT_SED_EXPR="s#^\./#./$BDC_COLLECTION_PREFIX#g"
    ;;
"absolute")
    FORMAT_SED_EXPR="s#^\./#$PWD/#g"
    ;;
"url="*)
    URL=$(echo "$1" | sed 's#url=\(.*\)#\1#g')
    FORMAT_SED_EXPR="s#^\./#$URL/#g"
    ;;
"rsync")
    FORMAT_SED_EXPR="s#^\./#./$BDC_COLLECTION_PREFIX#g"
    ;;
"globus="*","*)
    GLOBUS_SRC=$(echo "$1" | sed 's#globus=\([^,]*\),\(.*\)#\1#g')
    GLOBUS_DST=$(echo "$1" | sed 's#globus=\([^,]*\),\(.*\)#\2#g')
    FORMAT_SED_EXPR="s#^\./\(.*\)#$GLOBUS_SRC/$BDC_COLLECTION_PREFIX\1  $GLOBUS_DST/$BDC_COLLECTION_PREFIX\1/#g"
    ;;
*)
    echo "Invalid format. See usage for list of formats (--help)."
    exit 1
    ;;
esac
shift


## Filter file list coming from STDIN 
ASSETS=$(mktemp)
cat - > $ASSETS

TRIM_LIST=$(mktemp)
TEMPORAL_ASSETS=$(mktemp)

if [ -f .temporal_assets.sed ]; then
    sed -n -f .temporal_assets.sed $ASSETS > $TEMPORAL_ASSETS

    if [ $# -ge 1 ]; then
        awk -F ' +' -v threshold=$1 '{ if($1 < threshold) print $2 }' $TEMPORAL_ASSETS >> $TRIM_LIST
    fi

    if [ $# -ge 2 ]; then
        awk -F ' +' -v threshold=$2 '{ if($1 > threshold) print $2 }' $TEMPORAL_ASSETS >> $TRIM_LIST
    fi

    grep -v -F -f $TRIM_LIST $ASSETS | sed "$FORMAT_SED_EXPR"
else
    sed "$FORMAT_SED_EXPR" $ASSETS
fi

## Clean up temporary files
rm -f $TEMPORAL_ASSETS $TRIM_LIST $ASSETS
